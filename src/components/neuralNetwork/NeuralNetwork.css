/* Update for NeuralNetwork.css */
.neural-network-container {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    background-color: #040406;
}

.neural-network-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
}

/* Add a flex container to center the network better */
.network-center-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    position: relative;
}

.network-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 2;
}

/* Scanner line effect */
.scanner-line {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #00ffaa, transparent);
    opacity: 0.5;
    box-shadow: 0 0 10px #00ffaa;
    animation: scan 8s linear infinite;
}

@keyframes scan {
    0% {
        top: 0;
    }

    100% {
        top: 100%;
    }
}

/* Grid lines - reduced size for better scaling */
.grid-lines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image:
        linear-gradient(rgba(26, 32, 44, 0.07) 1px, transparent 1px),
        linear-gradient(90deg, rgba(26, 32, 44, 0.07) 1px, transparent 1px);
    background-size: 40px 40px;
    /* Reduced from 50px */
    z-index: -1;
}

/* Add an additional subtle pulse effect to the canvas */
.neural-network-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 50% 50%, rgba(0, 255, 170, 0.05) 0%, rgba(0, 0, 0, 0) 70%);
    animation: pulse-glow 8s ease-in-out infinite;
    z-index: 0;
    pointer-events: none;
}

@keyframes pulse-glow {

    0%,
    100% {
        opacity: 0.3;
    }

    50% {
        opacity: 0.7;
    }
}

/* Add a constraining element to ensure network stays within bounds */
.network-constraint {
    position: absolute;
    width: 90%;
    height: 90%;
    top: 5%;
    left: 5%;
    border: 1px solid rgba(0, 255, 170, 0.05);
    border-radius: 50%;
    pointer-events: none;
    z-index: 0;
}

/* Node label styling */
.node-label {
    font-family: 'Courier New', monospace;
    color: white;
    text-shadow: 0 0 5px #00ffaa;
    user-select: none;
    font-size: 12px;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 2px 6px;
    border-radius: 4px;
}

/* Responsive adjustments for different screen sizes */
@media (max-width: 768px) {
    .grid-lines {
        background-size: 30px 30px;
    }

    .network-constraint {
        width: 85%;
        height: 85%;
        top: 7.5%;
        left: 7.5%;
    }
}

/* CRT effect */
.crt-effect {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.1) 50%);
    background-size: 100% 4px;
    z-index: 10;
    pointer-events: none;
    opacity: 0.15;
}

/* Add vignette around edges to improve focus */
.neural-network-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 150px rgba(0, 0, 0, 0.7);
    z-index: 3;
    pointer-events: none;
}